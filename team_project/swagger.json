{
  "swagger": "2.0",
  "info": {
    "title": "Bookstore API",
    "version": "1.0.0",
    "description": "API for managing users and books"
  },
  "host": "team-project-ahvx.onrender.com",
  "schemes": [
    "https"
  ],
  "tags": [
    {
      "name": "Users",
      "description": "User CRUD operations"
    },
    {
      "name": "Books",
      "description": "Book CRUD operations"
    },
    {
      "name": "Orders",
      "description": "Order CRUD operations"
    },
    {
      "name": "Reviews",
      "description": "Reviews CRUD operations"
    }
  ],
  "securityDefinitions": {
    "githubAuth": {
      "type": "oauth2",
      "authorizationUrl": "https://github.com/login/oauth/authorize",
      "tokenUrl": "https://github.com/login/oauth/access_token",
      "flow": "accessCode",
      "scopes": {
        "user:email": "Access GitHub email"
      }
    }
  },
  "definitions": {
    "User": {
      "type": "object",
      "required": [
        "firstName",
        "lastName",
        "email"
      ],
      "properties": {
        "firstName": {
          "type": "string",
          "example": "John",
          "description": "User's first name"
        },
        "lastName": {
          "type": "string",
          "example": "Doe",
          "description": "User's last name"
        },
        "email": {
          "type": "string",
          "format": "email",
          "example": "john.doe@example.com",
          "description": "User's email address"
        },
        "role": {
          "type": "string",
          "enum": [
            "user",
            "admin"
          ],
          "default": "user",
          "description": "User's role"
        }
      }
    },
    "Book": {
      "type": "object",
      "required": [
        "title",
        "author",
        "price"
      ],
      "properties": {
        "title": {
          "type": "string",
          "example": "The Great Gatsby",
          "description": "Book title"
        },
        "author": {
          "type": "string",
          "example": "F. Scott Fitzgerald",
          "description": "Book author"
        },
        "price": {
          "type": "number",
          "format": "float",
          "example": 12.99,
          "description": "Book price"
        },
        "stock": {
          "type": "integer",
          "example": 50,
          "description": "Copies in stock"
        }
      }
    },
    "Order": {
      "type": "object",
      "required": [
        "userId",
        "books",
        "totalAmount",
        "status"
      ],
      "properties": {
        "userId": {
          "type": "string",
          "example": "507f1f77bcf86cd799439011",
          "description": "User ID who placed the order"
        },
        "books": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "bookId": {
                "type": "string",
                "example": "507f1f77bcf86cd799439012",
                "description": "Book ID"
              },
              "quantity": {
                "type": "integer",
                "example": 2,
                "description": "Quantity ordered",
                "minimum": 1
              }
            }
          },
          "description": "List of books in the order"
        },
        "totalAmount": {
          "type": "number",
          "format": "float",
          "example": 25.98,
          "description": "Total order amount",
          "minimum": 0
        },
        "status": {
          "type": "string",
          "enum": [
            "pending",
            "processing",
            "shipped",
            "delivered",
            "cancelled"
          ],
          "default": "pending",
          "description": "Order status"
        }
      }
    },
    "Review": {
      "type": "object",
      "required": [
        "userId",
        "bookId",
        "rating"
      ],
      "properties": {
        "userId": {
          "type": "string",
          "example": "507f1f77bcf86cd799439011",
          "description": "User ID who wrote the review"
        },
        "bookId": {
          "type": "string",
          "example": "507f1f77bcf86cd799439012",
          "description": "Book ID being reviewed"
        },
        "rating": {
          "type": "integer",
          "example": 5,
          "description": "Rating (1-5)",
          "minimum": 1,
          "maximum": 5
        },
        "comment": {
          "type": "string",
          "example": "Excellent book!",
          "description": "Review comment",
          "maxLength": 500
        }
      }
    }
  },
  "paths": {
    "/users": {
      "get": {
        "tags": [
          "Users"
        ],
        "summary": "Get all users",
        "responses": {
          "200": {
            "description": "List of users",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/User"
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Users"
        ],
        "summary": "Create a user",
        "security": [
          {
            "githubAuth": [
              "user:email"
            ]
          }
        ],
        "parameters": [
          {
            "name": "user",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/User"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "User created",
            "schema": {
              "$ref": "#/definitions/User"
            }
          },
          "400": {
            "description": "Invalid input"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/users/{id}": {
      "get": {
        "tags": [
          "Users"
        ],
        "summary": "Get user by ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "User ID"
          }
        ],
        "responses": {
          "200": {
            "description": "User details",
            "schema": {
              "$ref": "#/definitions/User"
            }
          },
          "404": {
            "description": "User not found"
          }
        }
      },
      "put": {
        "tags": [
          "Users"
        ],
        "summary": "Update user",
        "security": [
          {
            "githubAuth": [
              "user:email"
            ]
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "User ID"
          },
          {
            "name": "user",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/User"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "User updated",
            "schema": {
              "$ref": "#/definitions/User"
            }
          },
          "400": {
            "description": "Invalid input"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "User not found"
          }
        }
      },
      "delete": {
        "tags": [
          "Users"
        ],
        "summary": "Delete user",
        "security": [
          {
            "githubAuth": [
              "user:email"
            ]
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "User ID"
          }
        ],
        "responses": {
          "204": {
            "description": "User deleted"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "User not found"
          }
        }
      }
    },
    "/books": {
      "get": {
        "tags": [
          "Books"
        ],
        "summary": "Get all books",
        "responses": {
          "200": {
            "description": "List of books",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Book"
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Books"
        ],
        "summary": "Create a book",
        "security": [
          {
            "githubAuth": [
              "user:email"
            ]
          }
        ],
        "parameters": [
          {
            "name": "book",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Book"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Book created",
            "schema": {
              "$ref": "#/definitions/Book"
            }
          },
          "400": {
            "description": "Invalid input"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/books/{id}": {
      "get": {
        "tags": [
          "Books"
        ],
        "summary": "Get book by ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Book ID"
          }
        ],
        "responses": {
          "200": {
            "description": "Book details",
            "schema": {
              "$ref": "#/definitions/Book"
            }
          },
          "404": {
            "description": "Book not found"
          }
        }
      },
      "put": {
        "tags": [
          "Books"
        ],
        "summary": "Update book",
        "security": [
          {
            "githubAuth": [
              "user:email"
            ]
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Book ID"
          },
          {
            "name": "book",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Book"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Book updated",
            "schema": {
              "$ref": "#/definitions/Book"
            }
          },
          "400": {
            "description": "Invalid input"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Book not found"
          }
        }
      },
      "delete": {
        "tags": [
          "Books"
        ],
        "summary": "Delete book",
        "security": [
          {
            "githubAuth": [
              "user:email"
            ]
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Book ID"
          }
        ],
        "responses": {
          "204": {
            "description": "Book deleted"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Book not found"
          }
        }
      }
    },
    "/orders": {
      "get": {
        "tags": [
          "Orders"
        ],
        "summary": "Get all orders",
        "responses": {
          "200": {
            "description": "List of orders",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Order"
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Orders"
        ],
        "summary": "Create an order",
        "security": [
          {
            "githubAuth": [
              "user:email"
            ]
          }
        ],
        "parameters": [
          {
            "name": "order",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Order"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Order created",
            "schema": {
              "$ref": "#/definitions/Order"
            }
          },
          "400": {
            "description": "Invalid input"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/orders/{id}": {
      "get": {
        "tags": [
          "Orders"
        ],
        "summary": "Get order by ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Order ID"
          }
        ],
        "responses": {
          "200": {
            "description": "Order details",
            "schema": {
              "$ref": "#/definitions/Order"
            }
          },
          "404": {
            "description": "Order not found"
          }
        }
      },
      "put": {
        "tags": [
          "Orders"
        ],
        "summary": "Update order",
        "security": [
          {
            "githubAuth": [
              "user:email"
            ]
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Order ID"
          },
          {
            "name": "order",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Order"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Order updated",
            "schema": {
              "$ref": "#/definitions/Order"
            }
          },
          "400": {
            "description": "Invalid input"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Order not found"
          }
        }
      },
      "delete": {
        "tags": [
          "Orders"
        ],
        "summary": "Delete order",
        "security": [
          {
            "githubAuth": [
              "user:email"
            ]
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Order ID"
          }
        ],
        "responses": {
          "204": {
            "description": "Order deleted"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Order not found"
          }
        }
      }
    },
    "/reviews": {
      "get": {
        "tags": [
          "Reviews"
        ],
        "summary": "Get all reviews",
        "responses": {
          "200": {
            "description": "List of reviews",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Review"
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Reviews"
        ],
        "summary": "Create a review",
        "security": [
          {
            "githubAuth": [
              "user:email"
            ]
          }
        ],
        "parameters": [
          {
            "name": "review",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Review"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Review created",
            "schema": {
              "$ref": "#/definitions/Review"
            }
          },
          "400": {
            "description": "Invalid input"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/reviews/{id}": {
      "get": {
        "tags": [
          "Reviews"
        ],
        "summary": "Get review by ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Review ID"
          }
        ],
        "responses": {
          "200": {
            "description": "Review details",
            "schema": {
              "$ref": "#/definitions/Review"
            }
          },
          "404": {
            "description": "Review not found"
          }
        }
      },
      "put": {
        "tags": [
          "Reviews"
        ],
        "summary": "Update review",
        "security": [
          {
            "githubAuth": [
              "user:email"
            ]
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Review ID"
          },
          {
            "name": "review",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Review"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Review updated",
            "schema": {
              "$ref": "#/definitions/Review"
            }
          },
          "400": {
            "description": "Invalid input"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Review not found"
          }
        }
      },
      "delete": {
        "tags": [
          "Reviews"
        ],
        "summary": "Delete review",
        "security": [
          {
            "githubAuth": [
              "user:email"
            ]
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Review ID"
          }
        ],
        "responses": {
          "204": {
            "description": "Review deleted"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Review not found"
          }
        }
      }
    }
  }
}